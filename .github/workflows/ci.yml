name: CI

on:
  pull_request:
  push:
    # NOTE: Don't add other branches
    branches:
      - alpha
      - nightly
      - prod

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: rlespinasse/github-slug-action@v3.x
      - uses: kanga333/variable-mapper@v0.2.0
        with:
          key: "${{ env.GITHUB_REF_SLUG }}"
          map: |
            {
              "prod": {
                "ENVIRONMENT": "prod",
                "REACT_APP_GRAPHQL_ENDPOINT": "https://helix-api.idmcdb.org/graphql"
              },
              "alpha": {
                "ENVIRONMENT": "alpha",
                "REACT_APP_GRAPHQL_ENDPOINT": "https://helix-alpha-api.idmcdb.org/graphql"
              },
              "nightly": {
                "ENVIRONMENT": "nightly",
                "REACT_APP_GRAPHQL_ENDPOINT": "https://helix-nightly-api.idmcdb.org/graphql"
              }
            }

      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Run yarn install
        run: yarn install

      - name: Run yarn build (also test)
        run: env > .env && NODE_OPTIONS=--max_old_space_size=4096 yarn build:unsafe
        env:
          REACT_APP_MAPBOX_ACCESS_TOKEN: ${{ secrets.REACT_APP_MAPBOX_ACCESS_TOKEN }}
          REACT_APP_SENTRY_DSN: ${{ secrets.REACT_APP_SENTRY_DSN }}
          REACT_APP_GRAPHQL_ENDPOINT: ${{ env.REACT_APP_GRAPHQL_ENDPOINT }}
          GRAPHQL_CODEGEN_ENDPOINT: ${{ env.REACT_APP_GRAPHQL_ENDPOINT  }}
          REACT_APP_ENV: ${{ env.ENVIRONMENT }}

      - name: Save build files as artifact
        uses: actions/upload-artifact@v1
        if: github.event_name == 'push'
        with:
          name: helix-client
          path: build

  deploy:
    name: Deploy to AWS (S3 + Cloudfront)
    needs: test
    runs-on: ubuntu-latest

    if: github.event_name == 'push'

    steps:
      - uses: rlespinasse/github-slug-action@v3.x
      - uses: kanga333/variable-mapper@v0.2.0
        with:
          key: "${{ env.GITHUB_REF_SLUG }}"
          map: |
            {
              "prod": {
                "ENVIRONMENT": "prod",
                "AWS_S3_BUCKET": "${{ secrets.AWS_S3_BUCKET_PROD }}",
                "AWS_CLOUDFRONT_DISTRIBUTION": "${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_PROD }}"
              },
              "alpha": {
                "ENVIRONMENT": "alpha",
                "AWS_S3_BUCKET": "${{ secrets.AWS_S3_BUCKET_ALPHA }}",
                "AWS_CLOUDFRONT_DISTRIBUTION": "${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ALPHA }}"
              },
              "nightly": {
                "ENVIRONMENT": "nightly",
                "AWS_S3_BUCKET": "${{ secrets.AWS_S3_BUCKET_NIGHTLY }}",
                "AWS_CLOUDFRONT_DISTRIBUTION": "${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_NIGHTLY }}"
              }
            }

      - uses: actions/download-artifact@v1
        with:
          name: helix-client
          path: build

      # Copy build to S3
      - name: S3 Sync
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ env.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION:  ${{ secrets.AWS_REGION }}
          SOURCE_DIR: './build'

      # Invalidate Cloudfront (this action)
      - name: Cloudfront Invalidate
        uses: chetan/invalidate-cloudfront-action@master
        env:
          DISTRIBUTION: ${{ env.AWS_CLOUDFRONT_DISTRIBUTION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION:  ${{ secrets.AWS_REGION }}
          PATHS: '/index.html'
